# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
       - uses: actions/checkout@v3
       - name: Set up Node.js
         uses: actions/setup-node@v3
         with:
          node-version: '14' # 使用一个支持的Node版本
         
       - name: Set up Android SDK
         run: |
          wget https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
          sudo unzip sdk-tools-linux-4333796.zip -d /usr/local/android-sdk
          echo "ANDROID_HOME=/usr/local/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=/usr/local/android-sdk" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/android-sdk/emulator/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/android-sdk/platform-tools:$LD_LIBRARY_PATH" >> $GITHUB_ENV

       - name: Accept Android SDK licenses
         run: |
          echo y | sdkmanager --licenses

       - name: Build Android project
         run: |
          # Add your Android project build commands here
          # For example:
          # ./gradlew assembleDebug

       - name: Install sqlite3 for Android
         run: |
          npm install prebuild-install
          npm install node-pre-gyp
          npm install sqlite3 --compile --verbose

       - name: Run a multi-line script
         run: |
          echo Add other actions to test and deploy your Android project.
