name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        target: ["android-arm", "android-arm64", "android-x64"]

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Set up Android SDK
        run: |
          wget https://dl.google.com/android/repository/sdk-tools-linux-4333796.zip
          sudo unzip sdk-tools-linux-4333796.zip -d /usr/local/android-sdk
          echo "ANDROID_HOME=/usr/local/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=/usr/local/android-sdk" >> $GITHUB_PATH
          echo "LD_LIBRARY_PATH=/usr/local/android-sdk/emulator/lib64:$LD_LIBRARY_PATH" >> $GITHUB_ENV
          echo "LD_LIBRARY_PATH=/usr/local/android-sdk/platform-tools:$LD_LIBRARY_PATH" >> $GITHUB_ENV

      - name: sqlite3
        run: npm install sqlite3

      - name: Build sqlite3 for Android arm64
        run: |
         npm install -g node-gyp
         node-gyp configure || echo "Configuration failed, trying again..."
         node-gyp build || echo "Build failed, trying again..."
         mkdir -p package/prebuilds/${{ matrix.target }}
         cp build/sqlite3.node package/prebuilds/${{ matrix.target }}/sqlite3-android-arm64.node

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: sqlite3-android-arm64
          path: package/prebuilds/sqlite3-android-arm64.node

     

      - name: Run a multi-line script
        run: |
          echo Add other actions to test and deploy your Android project.
